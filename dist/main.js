!function(){"use strict";var e={inArray(e,t){let i=!1;return t.forEach((t=>{t[0]===e[0]&&t[1]===e[1]&&(i=!0)})),i}},t=class{constructor(e){this.pos=e.pos,this.health=e.health,this.movementRange=e.movementRange,this.shootingRange=e.shootingRange,this.shootingPower=e.shootingPower,this.enemy=e.enemy,this.name=e.name,this.actionLeft=!1,this.grid="grid"}draw(){const e=document.getElementsByClassName("game-board")[0].getContext("2d");let t="yellow";this.enemy&&(t="green"),e.fillStyle=t;let i=80*this.pos[0]+40,n=80*this.pos[1]+40;e.beginPath(),e.arc(i,n,20,0,2*Math.PI,!1),e.fill()}move(t){if(!1===this.actionLeft)return alert("Unit has already acted!"),!1;let i=this.posssibleMoves();return e.inArray(t,i)?(this.takeAction(),this.pos[0]=t[0],this.pos[1]=t[1],!0):(alert("Invalid Move"),!1)}posssibleMoves(e="move"){let t=this.movementRange;"shoot"===e&&(t=this.shootingRange);let n=[];return i.forEach((i=>{let s=this.pos[0],o=this.pos[1];for(let a=0;a<t;a++){if(s+=i[0],o+=i[1],!this.isValidMove([s,o])||this.grid.occupiedPos([s,o])){if(this.isValidMove([s,o])&&this.grid.occupiedPos([s,o])){"shoot"===e&&n.push([s,o]);break}break}"move"===e&&n.push([s,o])}})),n}isValidMove(e){let t=e[0],i=e[1];return!(t>7||t<0||i>7||i<0)}shoot(t){if(!1===this.actionLeft)return alert("Unit has already acted!"),!1;let i=this.posssibleMoves("shoot");return e.inArray(t,i)?(this.takeAction(),this.grid.getUnit(t).takeDamage(this.shootingPower),!0):(alert("Invalid Shot location"),!1)}takeDamage(e){this.health-=e}joinGrid(e){this.grid=e}gainAction(){this.actionLeft=!0,this.grid.actionableUnits.push(this)}takeAction(){this.actionLeft=!1,this.grid.actionableUnits.includes(this)&&this.grid.removeFromActionableUnits(this)}isEnemy(){return 1==this.enemy}};const i=[[0,1],[0,-1],[1,0],[-1,0],[1,1],[-1,-1],[1,-1],[-1,1]];var n=class extends t{constructor(e){super({name:"Indomitable Cover",health:9001,movementRange:0,shootingRange:0,pos:e,enemy:!0})}draw(){const e=document.getElementsByClassName("game-board")[0].getContext("2d");e.fillStyle="black",e.beginPath();let t=80*this.pos[0],i=80*this.pos[1]+20;e.fillRect(t,i,80,40),e.stroke()}gainAction(){this.health=9001}},s=[new t({pos:[7,0],health:100,movementRange:2,shootingRange:4,shootingPower:50,enemy:!1,name:"Ajax"}),new t({pos:[0,0],health:100,movementRange:2,shootingRange:4,shootingPower:50,enemy:!1,name:"Renektus"}),new t({pos:[0,1],health:50,movementRange:2,shootingRange:4,shootingPower:100,enemy:!0,name:"DemonaKilla"}),new t({pos:[6,0],health:50,movementRange:2,shootingRange:4,shootingPower:100,enemy:!0,name:"Tuska"}),new n([0,2]),new n([2,4]),new n([3,4]),new n([7,5])],o=class{constructor(e=640,t=640,i=8,n=8){this.height=e,this.width=t,this.columnNum=i,this.rowNum=n,this.units=[],this.actionableUnits=[],this.humanPlayer=!1}erase(){const e=document.getElementsByClassName("game-board")[0];e.getContext("2d").clearRect(0,0,e.width,e.height)}draw(){let e=document.getElementsByClassName("game-board")[0],t=e.getContext("2d");this.create_grid(e,t),this.populate()}create_grid(e,t){t.fillStyle="grey",t.fillRect(0,0,e.width,e.height),t.beginPath(),t.lineWidth=2,t.lineStyle="black";for(let i=0;i<e.height;i+=e.height/this.rowNum)t.moveTo(i,0),t.lineTo(i,e.height);for(let i=0;i<e.width;i+=e.width/this.columnNum)t.moveTo(0,i),t.lineTo(e.width,i);t.stroke()}populate(){this.units.forEach((e=>{e.draw()}))}addNewUnit(e){e.joinGrid(this),this.units.push(e)}loadLevelOneUnits(){s.forEach((e=>{this.addNewUnit(e)}))}getUnit(e){let t;return this.units.forEach((i=>{i.pos[0]===e[0]&&i.pos[1]===e[1]&&(t=i)})),t}checkUnits(){this.units.forEach((e=>{e.health<=0&&this.destroy(e)}))}destroy(e){let t=this.units.indexOf(e),i=this.units.slice(0,t),n=this.units.slice(t+1);this.units=i.concat(n)}removeFromActionableUnits(e){let t=this.actionableUnits.indexOf(e),i=this.actionableUnits.slice(0,t),n=this.actionableUnits.slice(t+1);this.actionableUnits=i.concat(n)}occupiedPos(e){let t=!1;return this.units.forEach((i=>{i.pos[0]===e[0]&&i.pos[1]===e[1]&&(t=!0)})),t}swapTurn(){!0===this.humanPlayer?(this.humanPlayer=!1,this.units.forEach((e=>{e.isEnemy()?e.gainAction():e.takeAction()}))):(this.humanPlayer=!0,this.units.forEach((e=>{e.isEnemy()?e.takeAction():e.gainAction()}))),console.log("Swaping turn!")}alliesDestroyed(){return this.units.every((e=>!0===e.enemy))}enemiesDestroyed(){return this.units.every((e=>!1===e.enemy||e instanceof n))}},a=class{constructor(e){this.grid=e,this.boundFirstClick=this.handleFirstClick.bind(this),this.boundMove=this.handleMove.bind(this),this.boundShot=this.handleShot.bind(this),this.boundSelectMove=this.selectMove.bind(this),this.boundSelectShot=this.selectShot.bind(this),this.boundDeselectUnit=this.deselectUnit.bind(this),this.boundStats=this.stats.bind(this),this.selectedUnit=void 0}start(){this.bindFirstClick(),this.addDeslectOption(),this.addStatsOption()}action(){this.grid.checkUnits(),this.grid.erase(),this.grid.draw(),this.gameOver()&&console.log("END OF LEVEL"),this.grid.actionableUnits.length<1&&this.grid.swapTurn()}gameOver(){return!(!this.grid.alliesDestroyed()&&!this.grid.enemiesDestroyed())}bindFirstClick(){document.getElementsByClassName("game-board")[0].addEventListener("click",this.boundFirstClick)}handleFirstClick(e){e.preventDefault(),e.stopPropagation();let t=document.getElementsByClassName("game-board")[0],i=t.offsetLeft+t.clientLeft,s=t.offsetTop+t.clientTop,o=e.pageX-i,a=e.pageY-s,h=Math.floor(o/80),l=Math.floor(a/80);if(void 0!==this.grid.getUnit([h,l])){let e=this.grid.getUnit([h,l]);e instanceof n||(this.selectUnit(e),t.removeEventListener("click",this.boundFirstClick),this.addActionEventListeners())}}handleMove(e){e.preventDefault(),e.stopPropagation();let t=document.getElementsByClassName("game-board")[0],i=t.offsetLeft+t.clientLeft,n=t.offsetTop+t.clientTop,s=e.pageX-i,o=e.pageY-n,a=Math.floor(s/80),h=Math.floor(o/80);this.selectedUnit.move([a,h])&&(t.removeEventListener("click",this.boundMove),t.addEventListener("click",this.boundFirstClick),this.action())}handleShot(e){e.preventDefault(),e.stopPropagation();let t=document.getElementsByClassName("game-board")[0],i=t.offsetLeft+t.clientLeft,n=t.offsetTop+t.clientTop,s=e.pageX-i,o=e.pageY-n,a=Math.floor(s/80),h=Math.floor(o/80);this.selectedUnit.shoot([a,h])&&(console.log("WOOSH!"),t.removeEventListener("click",this.boundShot),t.addEventListener("click",this.boundFirstClick),this.action())}selectUnit(e){this.selectedUnit=e}addActionEventListeners(){document.getElementById("move-command").addEventListener("click",this.boundSelectMove),document.getElementById("shoot-command").addEventListener("click",this.boundSelectShot)}removeActionEventListeners(){document.getElementById("move-command").removeEventListener("click",this.boundSelectMove),document.getElementById("shoot-command").removeEventListener("click",this.boundSelectShot)}removeMoveShootEvent(){let e=document.getElementsByClassName("game-board")[0];e.removeEventListener("click",this.boundShot),e.removeEventListener("click",this.boundMove)}addDeslectOption(){document.getElementById("deselect-command").addEventListener("click",this.boundDeselectUnit)}addStatsOption(){document.getElementById("stats-command").addEventListener("click",this.boundStats)}selectMove(e){e.preventDefault(),e.stopPropagation();let t=document.getElementsByClassName("game-board")[0];this.removeMoveShootEvent(),t.addEventListener("click",this.boundMove)}selectShot(e){e.preventDefault(),e.stopPropagation();let t=document.getElementsByClassName("game-board")[0];this.removeMoveShootEvent(),t.addEventListener("click",this.boundShot)}deselectUnit(e){e.preventDefault(),e.stopPropagation(),this.selectedUnit=void 0,this.removeActionEventListeners(),this.removeMoveShootEvent(),document.getElementsByClassName("game-board")[0].addEventListener("click",this.boundFirstClick)}stats(e){e.preventDefault(),e.stopPropagation(),this.populateStats()}populateStats(){if(void 0===this.selectedUnit)Array.from(document.getElementsByTagName("DD")).forEach((e=>{e.innerHTML=""}));else{let e=document.getElementById("unit-name"),t=document.getElementById("unit-health"),i=document.getElementById("unit-movement"),n=document.getElementById("unit-shooting"),s=document.getElementById("unit-damage"),o=document.getElementById("unit-avaliable");e.innerHTML=this.selectedUnit.name+" Spaces",t.innerHTML=this.selectedUnit.health+" Hit Points",i.innerHTML=this.selectedUnit.movementRange+" Tiles",n.innerHTML=this.selectedUnit.shootingRange+" Tiles",s.innerHTML=this.selectedUnit.shootingPower+" Damage",o.innerHTML=this.selectedUnit.actionLeft}}};document.addEventListener("DOMContentLoaded",(()=>{console.log("working :)"),window.Grid=o,window.Unit=t,window.GridView=a,window.Cover=n;const e=new o;new a(e).start(),e.loadLevelOneUnits(),e.draw(),e.swapTurn()}))}();